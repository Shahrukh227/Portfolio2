"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[8176],{44345:function(e,t){const a="true",r="false",n="null",i=new Map([["t",a],["f",r],["n",n]]),o=new Map([['"','"'],["\\","\\"],["/","/"],["b","\b"],["n","\n"],["f","\f"],["r","\r"],["t","\t"]]),s=new Map([["[","Punctuator"],["]","Punctuator"],["{","Punctuator"],["}","Punctuator"],[":","Punctuator"],[",","Punctuator"],[a,"Boolean"],[r,"Boolean"],[n,"Null"]]);class l extends Error{constructor(e,{line:t,column:a,index:r}){super(`${e} (${t}:${a})`),this.line=t,this.column=a,this.index=r}}class m extends l{constructor(e,t){super(`Unexpected character ${e} found.`,t)}}class p extends l{constructor(e){super(`Unexpected token ${e.type}(${e.value}) found.`,e.loc.start)}}class c extends l{constructor(e){super("Unexpected end of input found.",e)}}const y={comments:!1,ranges:!1};function d(e){return/[\s\n]/.test(e)}function f(e){return e>="0"&&e<="9"}function u(e){return f(e)||/[a-f]/i.test(e)}function h(e){return/[tfn]/.test(e)}function g(e){return f(e)||"."===e||"-"===e}function k(e,t){t=Object.freeze({...y,...t});let a=-1,r=1,n=0,l=!1;const p=[];function k(e,a,r,n){const i=r.offset+a.length;let o=t.ranges?{range:[r.offset,i]}:void 0;return{type:e,value:a,loc:{start:r,end:n||{line:r.line,column:r.column+a.length,offset:i}},...o}}function S(){let t=e.charAt(++a);return l?(r++,n=1,l=!1):n++,"\r"===t?(l=!0,"\n"===e.charAt(a+1)&&a++):"\n"===t&&(l=!0),t}function x(){return{line:r,column:n,offset:a}}function b(t){let r=i.get(t);if(e.slice(a,a+r.length)===r)return a+=r.length-1,n+=r.length-1,{value:r,c:S()};for(let t=1;t<r.length;t++)r[t]!==e.charAt(a+t)&&P(S())}function T(e){let t=e;for(e=S();e&&'"'!==e;){if("\\"===e)if(t+=e,e=S(),o.has(e))t+=e;else if("u"===e){t+=e;for(let a=0;a<4;a++)u(e=S())?t+=e:P(e)}else P(e);else t+=e;e=S()}return e||O(),t+=e,{value:t,c:S()}}function w(e){let t="";if("-"===e&&(t+=e,f(e=S())||P(e)),"0"===e)t+=e,f(e=S())&&P(e);else{(function(e){return e>="1"&&e<="9"})(e)||P(e);do{t+=e,e=S()}while(f(e))}if("."===e)do{t+=e,e=S()}while(f(e));if("e"===e||"E"===e)for(t+=e,"+"!==(e=S())&&"-"!==e||(t+=e,e=S()),f(e)||P(e);f(e);)t+=e,e=S();return{value:t,c:e}}function v(e){let t=e;if("/"===(e=S())){do{t+=e,e=S()}while(e&&"\r"!==e&&"\n"!==e);return{value:t,c:e}}if("*"===e){for(;e;)if(t+=e,"*"===(e=S())&&(t+=e,"/"===(e=S())))return t+=e,{value:t,c:e=S()};O()}P(e)}function P(e){throw new m(e,x())}function O(){throw new c(x())}let C=S();for(;a<e.length;){for(;d(C);)C=S();if(!C)break;const e=x();if(s.has(C))p.push(k(s.get(C),C,e)),C=S();else if(h(C)){const t=b(C);let a=t.value;C=t.c,p.push(k(s.get(a),a,e))}else if(g(C)){const t=w(C);let a=t.value;C=t.c,p.push(k("Number",a,e))}else if('"'===C){const t=T(C);let a=t.value;C=t.c,p.push(k("String",a,e))}else if("/"===C&&t.comments){const t=v(C);let a=t.value;C=t.c,p.push(k(a.startsWith("//")?"LineComment":"BlockComment",a,e,x()))}else P(C)}return p}const S={document:(e,t={})=>({type:"Document",body:e,...t}),string:(e,t={})=>({type:"String",value:e,...t}),number:(e,t={})=>({type:"Number",value:e,...t}),boolean:(e,t={})=>({type:"Boolean",value:e,...t}),null:(e={})=>({type:"Null",value:"null",...e}),array:(e,t={})=>({type:"Array",elements:e,...t}),object:(e,t={})=>({type:"Object",members:e,...t}),member:(e,t,a={})=>({type:"Member",name:e,value:t,...a})},x={tokens:!1,comments:!1,ranges:!1};function b(e){switch(e.type){case"Boolean":return"true"===e.value;case"Number":return Number(e.value);case"Null":return null;case"String":return function(e){let t=e.value.slice(1,-1),a="",r=t.indexOf("\\"),n=0;for(;r>=0;){a+=t.slice(n,r);const i=t.charAt(r+1);if(o.has(i))a+=o.get(i),n=r+2;else{if("u"!==i)throw new l(`Invalid escape \\${i}.`,{line:e.loc.start.line,column:e.loc.start.column+r,offset:e.loc.start.offset+r});{const i=t.slice(r+2,r+6);if(i.length<4||/[^0-9a-f]/i.test(i))throw new l(`Invalid unicode escape \\u${i}.`,{line:e.loc.start.line,column:e.loc.start.column+r,offset:e.loc.start.offset+r});a+=String.fromCharCode(parseInt(i,16)),n=r+6}}r=t.indexOf("\\",n)}return a+=t.slice(n),a}(e)}}const T=new Map([["Document",["body"]],["Object",["members"]],["Member",["name","value"]],["Array",["elements"]],["String",[]],["Number",[]],["Boolean",[]],["Null",[]]]);function w(e){return e&&"object"==typeof e}function v(e){return w(e)&&"string"==typeof e.type}function P(e,t){!function e(a,r){"function"==typeof t.enter&&t.enter(a,r);for(const t of T.get(a.type)){const r=a[t];w(r)&&(Array.isArray(r)?r.forEach((t=>e(t,a))):v(r)&&e(r,a))}"function"==typeof t.exit&&t.exit(a,r)}(e)}function O(e){switch(e.type){case"String":case"Number":case"Boolean":return e.value;case"Null":return null;case"Array":return e.elements.map(O);case"Object":{const t={};return e.members.forEach((e=>{t[O(e.name)]=O(e.value)})),t}case"Document":return O(e.body);case"Property":throw new Error("Cannot evaluate object property outside of an object.");default:throw new Error(`Unknown node type ${e.type}.`)}}t.Qc=function(e,t){const a=k(e,{comments:!!(t=Object.freeze({...x,...t})).comments,ranges:!!t.ranges});let r=0;const n=t.comments?function e(){const t=a[r++];return t&&t.type.endsWith("Comment")?e():t}:function(){return a[r++]};function i(e,t){if(!e||e.value!==t)throw new p(e)}function o(e,a){return t.ranges?{range:[e.offset,a.offset]}:void 0}function s(e){const t=o(e.loc.start,e.loc.end);return{type:e.type,value:b(e),loc:{start:{...e.loc.start},end:{...e.loc.end}},...t}}function l(e){!function(e,t){if(!e||e.type!==t)throw new p(e)}(e,"String");const t=s(e);i(e=n(),":");const a=m(),r=o(t.loc.start,a.loc.end);return S.member(t,a,{loc:{start:{...t.loc.start},end:{...a.loc.end}},...r})}function m(e){switch((e=e||n()).type){case"String":case"Boolean":case"Number":case"Null":return s(e);case"Punctuator":if("{"===e.value)return function(e){i(e,"{");const t=[];let a=n();if(a&&"}"!==a.value)do{if(t.push(l(a)),a=n(),","!==a.value)break;a=n()}while(a);i(a,"}");const r=o(e.loc.start,a.loc.end);return S.object(t,{loc:{start:{...e.loc.start},end:{...a.loc.end}},...r})}(e);if("["===e.value)return function(e){i(e,"[");const t=[];let a=n();if(a&&"]"!==a.value)do{if(t.push(m(a)),a=n(),","!==a.value)break;a=n()}while(a);i(a,"]");const r=o(e.loc.start,a.loc.end);return S.array(t,{type:"Array",elements:t,loc:{start:{...e.loc.start},end:{...a.loc.end}},...r})}(e);default:throw new p(e)}}const c=m(),y=n();if(y)throw new p(y);const d={loc:{start:{line:1,column:1,offset:0},end:{...c.loc.end}}};return t.tokens&&(d.tokens=a),t.ranges&&(d.range=o(d.loc.start,d.loc.end)),S.document(c,d)},t.fw=P},44954:function(e,t,a){a.d(t,{$:function(){return r}});var r={custom:"custom",string:{assetImageType:"asset-image-type",assetType:"asset-type",author:"author",character:"character",cssClass:"css-class",description:"description",expression:"expression",filename:"filename",fontCssClass:"font-css-class",fontFamily:"font-family",fontName:"font-name",fontPath:"font-path",fontStyle:"font-style",fontWeight:"font-weight",generator:"generator",hexColor:"hex-color",idAssetImage:"id-asset-image",idAssetPrecomposition:"id-asset-precomposition",idAssetDataSource:"id-asset-data-source",idAssetFile:"id-asset-file",idDataSource:"data-source-id",idImage:"image-id",idLayerXml:"layer-xml-id",idReference:"reference-id",idSound:"sound-id",keyword:"keyword",layerXmlTagName:"layer-xml-tag-name",markerComment:"marker-comment",maskMode:"mask-mode",maskModeNo:"mask-mode-no",maskModeAdd:"mask-mode-add",maskModeSubtract:"mask-mode-subtract",maskModeIntersect:"mask-mode-intersect",maskModeLighten:"mask-mode-lighten",maskModeDarken:"mask-mode-darken",maskModeDifference:"mask-mode-difference",matchName:"match-name",name:"name",path:"path",shapeType:"shape-type",strokeDashType:"stroke-dash-type",text:"text",themeColor:"theme-color",version:"version"},number:{adaptiveSampleLimit:"adaptive-sample-limit",ascent:"ascent",textBased:"text-based",textBasedCharacters:"text-based-characters",textBasedCharacterExcludingSpaces:"text-based-character-excluding-spaces",textBasedWords:"text-based-words",textBasedLines:"text-based-lines",baselineShift:"baseline-shift",blendMode:"blend-mode",blendModeNormal:"blend-mode-normal",blendModeMultiply:"blend-mode-multiply",blendModeScreen:"blend-mode-screen",blendModeOverlay:"blend-mode-overlay",blendModeDarken:"blend-mode-darken",blendModeLighten:"blend-mode-lighten",blendModeColorDodge:"blend-mode-color-dodge",blendModeColorBurn:"blend-mode-color-burn",blendModeHardLight:"blend-mode-hard-light",blendModeSoftLight:"blend-mode-soft-light",blendModeDifference:"blend-mode-difference",blendModeExclusion:"blend-mode-exclusion",blendModeHue:"blend-mode-hue",blendModeSaturation:"blend-mode-saturation",blendModeColor:"blend-mode-color",blendModeLuminosity:"blend-mode-luminosity",composite:"composite",compositeAbove:"composite-above",compositeBelow:"composite-below",compositionIndex:"composition-index",count:"count",dataSourceType:"data-source-type",effectType:"effect-type",effectValueType:"effect-value-type",expressionPropertyIndex:"expression-property-index",fillRule:"fill-rule",fillRuleNonZero:"fill-rule-non-zero",fillRuleEvenOdd:"fill-rule-even-odd",fontSize:"font-size",framerate:"framerate",gradientType:"gradient-type",gradientTypeLinear:"gradient-type-linear",gradientTypeRadial:"gradient-type-radial",height:"height",inPoint:"in-point",layerStyleType:"layer-style-type",layerType:"layer-type",length:"length",lineCap:"line-cap",lineCapButt:"line-cap-butt",lineCapRound:"line-cap-round",lineCapSquare:"line-cap-square",lineHeight:"line-height",lineJoin:"line-join",lineJoinMiter:"line-join-miter",lineJoinRound:"line-join-round",lineJoinBevel:"line-join-bevel",markerDuration:"marker-duration",markerTime:"marker-time",matteMode:"matte-mode",matteModeNormal:"matte-mode-normal",matteModeAlpha:"matte-mode-alpha",matteModeInvertedAlpha:"matte-mode-inverted-alpha",matteModeLuma:"matte-mode-luma",matteModeInvertedLuma:"matte-mode-inverted-luma",matteParent:"matte-parent",mergeMode:"merge-mode",mergeModeNormal:"merge-mode-normal",mergeModeAdd:"merge-mode-add",mergeModeSubtract:"merge-mode-subtract",mergeModeIntersect:"merge-mode-intersect",mergeModeExcludeIntersections:"merge-mode-exclude-intersections",miterLimitValue:"miter-limit-value",trimMultipleShapes:"trim-multiple-shapes",trimMultipleShapesIndividually:"trim-multiple-shapes-individually",trimMultipleShapesSimultaneously:"trim-multiple-shapes-simultaneously",numberOfProperties:"number-of-properties",outPoint:"out-point",parentIndex:"parent-index",propertyIndex:"property-index",rangeUnits:"range-units",rangeUnitsPercent:"range-units-percent",rangeUnitsIndex:"range-units-index",samplesPerFrame:"samples-per-frame",shapeDirection:"shape-direction",shapeDirectionNormal:"shape-direction-normal",shapeDirectionClockwise:"shape-direction-clockwise",shapeDirectionClockwiseReversed:"shape-direction-clockwise-reversed",shapePathIndex:"shape-path-index",shapePolygonStarType:"shape-polygon-star-type",shutterAngle:"shutter-angle",shutterPhase:"shutter-phase",staticValue:"static-value",textMask:"text-mask",textRangeSelectorMode:"text-range-selector-mode",textTracking:"text-tracking",fontPathOrigin:"font-path-origin",fontPathOriginLocal:"font-path-origin-local",fontPathOriginCssUrl:"font-path-origin-css-url",fontPathOriginScriptUrl:"font-path-origin-script-url",fontPathOriginFonturl:"font-path-origin-fonturl",textCaps:"text-caps",textCapsRegular:"text-caps-regular",textCapsAll:"text-caps-all",textCapsSmall:"text-caps-small",textGrouping:"text-grouping",textGroupingCharacters:"text-grouping-characters",textGroupingWords:"text-grouping-words",textGroupingLine:"text-grouping-line",textGroupingAll:"text-grouping-all",textJustify:"text-justify",textJustifyLeft:"text-justify-left",textJustifyRight:"text-justify-right",textJustifyCenter:"text-justify-center",textJustifyWithLastLineLeft:"text-justify-with-last-line-left",textJustifyWithLastLineRight:"text-justify-with-last-line-right",textJustifyWithLastLineCenter:"text-justify-with-last-line-center",textJustifyWithLastLineFull:"text-justify-with-last-line-full",textShape:"text-shape",textShapeSquare:"text-shape-square",textShapeRampUp:"text-shape-ramp-up",textShapeRampDown:"text-shape-ramp-down",textShapeTriangle:"text-shape-triangle",textShapeRound:"text-shape-round",textShapeSmooth:"text-shape-smooth",textVerticalJustify:"text-vertical-justify",textVerticalJustifyTop:"text-vertical-justify-top",textVerticalJustifyCenter:"text-vertical-justify-center",textVerticalJustifyBottom:"text-vertical-justify-bottom",keyframeTime:"keyframe-time",keyframeListTime:"keyframe-list-time",keyframeValueTime:"keyframe-value-time",positionKeyframeTime:"position-keyframe-time",positionKeyframeListTime:"position-keyframe-list-time",keyframeBezierHandleTime:"keyframe-bezier-handle-time",shapeKeyframeTime:"shape-keyframe-time",keyframeXAxis:"keyframe-x-axis",keyframeListXAxis:"keyframe-list-x-axis",keyframeValueXAxis:"keyframe-value-x-axis",positionKeyframeXAxis:"position-keyframe-x-axis",positionKeyframeListXAxis:"position-keyframe-list-x-axis",keyframeBezierHandleXAxis:"keyframe-bezier-handle-x-axis",keyframeYAxis:"keyframe-y-axis",keyframeListYAxis:"keyframe-list-y-axis",keyframeValueYAxis:"keyframe-value-y-axis",positionKeyframeYAxis:"position-keyframe-y-axis",positionKeyframeListYAxis:"position-keyframe-list-y-axis",keyframeBezierHandleYAxis:"keyframe-bezier-handle-y-axis",timeStart:"start-time",timeStretch:"time-stretch",effectValueIgnored:"effect-value-ignored",effectPropertyCount:"effect-property-count",width:"width"},intBoolean:{animated:"animated",autoOrient:"auto-orient",collapseTransformNew:"collapse-transform-new",embedded:"embedded",enabled:"enabled",expressible:"expressible",extraComposition:"extra-composition",hold:"hold",randomize:"randomize",threedimensional:"threedimensional",layerThreedimensional:"layer-threedimensional",matteTarget:"matte-target"},boolean:{bezierClosed:"bezier-closed",collapseTransform:"collapse-transform",hasMask:"has-mask",hidden:"hidden",inverted:"inverted",motionBlurEnabled:"motion-blur-enabled",splitEnabled:"split-enabled",strokeOverFill:"stroke-over-fill"},object:{animatedColor:"animated-color",animatedColorStatic:"animated-color-static",animatedMultidimensional:"animated-multidimensional",animatedMultidimensionalStatic:"animated-multidimensional-static",animatedPosition:"animated-position",animatedPositionStatic:"animated-position-static",animatedShape:"animated-shape",animatedShapeStatic:"animated-shape-static",animatedValue:"animated-value",animatedValueStatic:"animated-value-static",animation:"animation",assetDataSource:"asset-data-source",assetImage:"asset-image",assetPrecomposition:"asset-precomposition",assetFile:"asset-file",bezier:"bezier",characterData:"character-data",characterPrecomp:"character-precomp",characterShapes:"character-shapes",effectCustom:"effect-custom",effectDisplacementMap:"effect-displacement-map",effectDropShadow:"effect-drop-shadow",effectFill:"effect-fill",effectGaussianBlur:"effect-gaussian-blur",effectMatte3:"effect-matte3",effectMeshWarp:"effect-mesh-warp",effectPaintOverTransparent:"effect-paint-over-transparent",effectProLevels:"effect-pro-levels",effectPuppet:"effect-puppet",effectRadialWipe:"effect-radial-wipe",effectSpherize:"effect-spherize",effectStroke:"effect-stroke",effectTint:"effect-tint",effectTritone:"effect-tritone",effectParamAngle:"effect-param-angle",effectParamCheckbox:"effect-param-checkbox",effectParamColor:"effect-param-color",effectParamDropdown:"effect-param-dropdown",effectParamIgnored:"effect-param-ignored",effectParamLayer:"effect-param-layer",effectParamNoValue:"effect-param-no-value",effectParamPoint:"effect-param-point",effectParamSlider:"effect-param-slider",effectWavy:"effect-wavy",endOpacity:"end-opacity",gradientOverlay:"gradient-overlay",keyframe:"keyframe",keyframeBezierHandle:"keyframe-bezier-handle",layerAdjustment:"layer-adjustment",layerAudio:"layer-audio",layerCamera:"layer-camera",layerData:"layer-data",layerGuide:"layer-guide",layerImage:"layer-image",layerImagePlaceholder:"layer-image-placeholder",layerImageSequence:"layer-image-sequence",layerLight:"layer-light",layerNull:"layer-null",layerPrecomposition:"layer-precomposition",layerShape:"layer-shape",layerSolidColor:"layer-solid-color",layerStyleBevelEmboss:"layer-style-bevel-emboss",layerStyleChokeSpread:"layer-style-choke-spread",layerStyleColorOverlay:"layer-style-color-overlay",layerStyleDropShadow:"layer-style-drop-shadow",layerStyleGradientOverlay:"layer-style-gradient-overlay",layerStyleInnerGlow:"layer-style-inner-glow",layerStyleInnerShadow:"layer-style-inner-shadow",layerStyleOuterGlow:"layer-style-outer-glow",layerStyleSatin:"layer-style-satin",layerStyleStroke:"layer-style-stroke",layerText:"layer-text",layerVideo:"layer-video",layerVideoPlaceholder:"layer-video-placeholder",marker:"marker",mask:"mask",positionKeyframe:"position-keyframe",shapeEllipse:"shape-ellipse",shapeFill:"shape-fill",shapeGradientFill:"shape-gradient-fill",shapeGradientStroke:"shape-gradient-stroke",shapeGroup:"shape-group",shapeKeyframe:"shape-keyframe",shapeMerge:"shape-merge",shapeOffsetPath:"shape-offset-path",shapePath:"shape-path",shapePolygon:"shape-polygon",shapePolyStar:"shape-poly-star",shapePuckerBloat:"shape-pucker-bloat",shapeRectangle:"shape-rectangle",shapeRepeater:"shape-repeater",shapeRoundedCorners:"shape-rounded-corners",shapeStar:"shape-star",shapeStroke:"shape-stroke",shapeTransform:"shape-transform",shapeTrim:"shape-trim",shapeTwist:"shape-twist",shapeZigZags:"shape-zig-zag",splitVector:"split-vector",strokeDashDefault:"stroke-dash-default",strokeDashGap:"stroke-dash-gap",strokeDashLength:"stroke-dash-length",strokeDashOffset:"stroke-dash-offset",textFont:"text-font",textRange:"text-range",textDocumentKeyframe:"text-document-keyframe"},array:{outTangentsValue:"out-tangents-value"},collection:{assets:"assets",composition:"composition",effectList:"effect-list",effectParamList:"effect-param-list",extraCompositions:"extra-compositions",bezierInTangents:"bezier-in-tangents",keyframeEndValue:"keyframe-end-value",keyframeList:"keyframe-list",keyframeValue:"keyframe-value",keywords:"keywords",layerStyle:"layer-style",layerStyleList:"layer-style-list",markers:"markers",masksProperties:"masks-properties",bezierOutTangents:"bezier-out-tangents",positionKeyframeList:"position-keyframe-list",shapeKeyframeList:"shape-keyframe-list",shapeKeyframeStart:"shape-keyframe-start",shapeList:"shape-list",staticValues:"static-values",strokeDashList:"stroke-dash-list",textRanges:"text-ranges",textCharacters:"text-characters",textDocumentKeyframes:"text-document-keyframes",textFontList:"text-font-list",positionKeyframeInTangents:"position-keyframe-in-tangents",positionKeyframeOutTangents:"position-keyframe-out-tangents",bezierVertices:"bezier-vertices",bezierXAxis:"bezier-x-axis",bezierYAxis:"bezier-y-axis",colorRgba:"color-rgba",documentFillColor:"document-fill-color",documentStrokeColor:"document-stroke-color",wrapPosition:"wrap-position",wrapSize:"wrap-size"},element:{align:"align",altitude:"altitude",amount:"amount",anchorPoint:"anchor-point",angle:"angle",animatedColorProp:"animated-color-prop",animatedGradientColors:"animated-gradient-colors",animatedMultidimensionalProp:"animated-multidimensional-prop",animatedPositionProp:"animated-position-prop",animatedShapeBezier:"animated-shape-bezier",animatedShapeProp:"animated-shape-prop",animatedValueProp:"animated-value-prop",bevelStyle:"bevel-style",textBlur:"text-blur",blurSize:"blur-size",shapeTrimCenter:"shape-trim-center",chokeSpread:"choke-spread",copies:"copies",dilate:"dilate",distance:"distance",effectValueAngle:"effect-value-angle",effectValueCheckbox:"effect-value-checkbox",effectValueColor:"effect-value-color",effectValueDropdown:"effect-value-dropdown",effectValueLayer:"effect-value-layer",effectValuePoint:"effect-value-point",effectValueSlider:"effect-value-slider",textFillBrightness:"text-fill-brightness",textFillColor:"text-fill-color",textFillHue:"text-fill-hue",textFillOpacity:"text-fill-opacity",textFillSaturation:"text-fill-saturation",shapeGradientFillRule:"shape-gradient-fill-rule",firstMargin:"first-margin",forceAlignment:"force-alignment",globalAngle:"global-angle",gradientOverlayScale:"gradient-overlay-scale",highlightAngle:"highlight-angle",highlightColor:"highlight-color",highlightLength:"highlight-length",highlightMode:"highlight-mode",highlightOpacity:"highlight-opacity",innerRadius:"inner-radius",innerRoundness:"inner-roundness",invert:"invert",keyframeInTangent:"keyframe-in-tangent",keyframeListInTangent:"keyframe-list-in-tangent",keyframeValueInTangent:"keyframe-value-in-tangent",positionKeyframeInTangent:"position-keyframe-in-tangent",positionKeyframeListInTangent:"position-keyframe-list-in-tangent",keyframeBezierHandleInTangent:"keyframe-bezier-handle-in-tangent",shapeKeyframeInTangent:"shape-keyframe-in-tangent",keyframeOutTangent:"keyframe-out-tangent",keyframeListOutTangent:"keyframe-list-out-tangent",keyframeValueOutTangent:"keyframe-value-out-tangent",positionKeyframeOutTangent:"position-keyframe-out-tangent",positionKeyframeListOutTangent:"position-keyframe-list-out-tangent",keyframeBezierHandleOutTangent:"keyframe-bezier-handle-out-tangent",shapeKeyframeOutTangent:"shape-keyframe-out-tangent",jitter:"jitter",lastMargin:"last-margin",layerAudioSettings:"layer-audio-settings",layerConceal:"layer-conceal",layerStyleBlendMode:"layer-style-blend-mode",layerStyleColor:"layer-style-color",layerTransform:"layer-transform",audioLevel:"audio-level",lineSpacing:"line-spacing",maskOpacity:"mask-opacity",maskVertices:"mask-vertices",textMaxAmount:"text-max-amount",textMaxEase:"text-max-ease",textMinEase:"text-min-ease",metadata:"metadata",miterLimit:"miter-limit",miterLimitAlternative:"miter-limit-alternative",motionBlur:"motion-blur",noise:"noise",shapeTrimOffset:"shape-trim-offset",shapeFillOpacity:"shape-fill-opacity",shapeGradientFillOpacity:"shape-gradient-fill-opacity",shapeGradientStrokeOpacity:"shape-gradient-stroke-opacity",layerStyleOpacity:"layer-style-opacity",shapeStrokeOpacity:"shape-stroke-opacity",layerTransformOrientation:"layer-transform-orientation",shapeTransformOrientation:"shape-transform-orientation",transformRepeaterOrientation:"transform-repeater-orientation",textStyleOrientation:"text-style-orientation",shapePolygonOuterRadius:"shape-polygon-outer-radius",shapeStarOuterRadius:"shape-star-outer-radius",shapePolygonOuterRoundness:"shape-polygon-outer-roundness",shapeStarOuterRoundness:"shape-star-outer-roundness",perpendicularToPath:"perpendicular-to-path",perspective:"perspective",shapePolygonPoints:"shape-polygon-points",shapeStarPoints:"shape-star-points",shapeZigZagsPoints:"shape-zig-zags-points",polygonRotationClockwise:"polygon-rotation-clockwise",radius:"radius",range:"range",reverse:"reverse",reversePath:"reverse-path",rotationClockwise:"rotation-clockwise",rotationX:"rotation-x",rotationY:"rotation-y",rotationZ:"rotation-z",rounded:"rounded",roundness:"roundness",layerTransformScale:"layer-transform-scale",shapeTransformScale:"shape-transform-scale",transformRepeaterScale:"transform-repeater-scale",textStyleScale:"text-style-scale",selectorSmoothness:"selector-smoothness",shadowColor:"shadow-color",shadowMode:"shadow-mode",shadowOpacity:"shadow-opacity",shape:"shape",shapeEllipseSize:"shape-ellipse-size",shapeFillColor:"shape-fill-color",shapeStrokeColor:"shape-stroke-color",shapeTrimEnd:"shape-trim-end",shapeTrimStart:"shape-trim-start",shapeZigZagSize:"shape-zig-zag-size",shapeRectangleSize:"shape-rectangle-size",layerStyleStrokeSize:"layer-style-stroke-size",layerTransformSkew:"layer-transform-skew",shapeTransformSkew:"shape-transform-skew",transformRepeaterSkew:"transform-repeater-skew",textStyleSkew:"text-style-skew",layerTransformSkewAxis:"layer-transform-skew-axis",shapeTransformSkewAxis:"shape-transform-skew-axis",transformRepeaterSkewAxis:"transform-repeater-skew-axis",textStyleSkewAxis:"text-style-skew-axis",smoothness:"smoothness",soften:"soften",source:"source",splitX:"split-x",splitY:"split-y",splitZ:"split-z",startOpacity:"start-opacity",shapeGradientFillStartPoint:"shape-gradient-fill-start-point",shapeGradientStrokeStartPoint:"shape-gradient-stroke-start-point",shapeGradientFillEndPoint:"shape-gradient-fill-end-point",shapeGradientStrokeEndPoint:"shape-gradient-stroke-end-point",strength:"strength",strokeBrightness:"stroke-brightness",strokeColor:"stroke-color",strokeHue:"stroke-hue",strokeLength:"stroke-length",strokeOpacity:"stroke-opacity",strokeSaturation:"stroke-saturation",strokeWidth:"stroke-width",technique:"technique",textAnimatorData:"text-animator-data",textCharacterData:"text-character-data",textData:"text-data",textStyle:"text-style",textAnimatedDocument:"text-animated-document",textDocument:"text-document",textFonts:"text-fonts",textGroupAlignment:"text-group-alignment",textFollowPath:"text-follow-path",textAlignmentOptions:"text-alignment-options",textSelector:"text-selector",textSelectorEnd:"text-selector-end",textSelectorStart:"text-selector-start",timeRemapping:"time-remapping",letterSpacing:"letter-spacing",transformOpacity:"transform-opacity",transformRepeater:"transform-repeater",translation:"translation",userMetadata:"user-metadata"}}},10740:function(e,t,a){a.d(t,{ZP:function(){return Ae}});var r=a(44954),{number:n,string:i}=r.$,o="relottie-parse",s=new Map([[0,"normal"],[1,"multiply"],[2,"screen"],[3,"overlay"],[4,"darken"],[5,"lighten"],[6,"color-dodge"],[7,"color-burn"],[8,"hard-light"],[9,"soft-light"],[10,"difference"],[11,"exclusion"],[12,"hue"],[13,"saturation"],[14,"color"],[15,"luminosity"]]),l=new Map([[1,"above"],[2,"below"]]),m=new Map([[1,"non-zero"],[2,"even-odd"]]),p=new Map([[1,"linear"],[2,"radial"]]),c=new Map([[1,"butt"],[2,"round"],[3,"square"]]),y=new Map([[1,"miter"],[2,"round"],[3,"bevel"]]),d=new Map([[0,"normal"],[1,"clockwise"],[3,"clockwise-reversed"]]),f=new Map([[1,"individually"],[2,"simultaneously"]]),u=new Map([[0,"normal"],[1,"alpha"],[2,"inverted-alpha"],[3,"luma"],[4,"inverted-luma"]]),h=new Map([[1,"characters"],[2,"character-excluding-spaces"],[3,"words"],[4,"lines"]]),g=new Map([[0,"regular"],[1,"all"],[2,"small"]]),k=new Map([[1,"characters"],[2,"words"],[3,"line"],[4,"all"]]),S=new Map([[0,"left"],[1,"right"],[2,"center"],[3,"with-last-line-left"],[4,"with-last-line-right"],[5,"with-last-line-center"],[6,"with-last-line-full"]]),x=new Map([[1,"square"],[2,"ramp-up"],[3,"ramp-down"],[4,"triangle"],[5,"round"],[6,"smooth"]]),b=new Map([[0,"local"],[1,"css-url"],[2,"script-url"],[3,"fonturl"]]),T=new Map([[0,"top"],[1,"center"],[2,"bottom"]]),w=new Map([[1,"percent"],[2,"index"]]),v=new Map([[1,"normal"],[2,"add"],[3,"substract"],[4,"intersect"],[5,"exclude-intersections"]]),P=new Map([[n.blendMode,s],[n.composite,l],[n.fillRule,m],[n.gradientType,p],[n.lineCap,c],[n.lineJoin,y],[n.shapeDirection,d],[n.trimMultipleShapes,f],[n.matteMode,u],[n.textBased,h],[n.textCaps,g],[n.textGrouping,k],[n.textJustify,S],[n.textShape,x],[n.fontPathOrigin,b],[n.textVerticalJustify,T],[n.rangeUnits,w],[n.mergeMode,v]]),O=new Map([["n","no"],["a","add"],["s","subtract"],["i","intersect"],["l","lighten"],["d","darken"],["f","difference"]]),C=new Map([[i.maskMode,O]]),{boolean:L,collection:M,custom:A,element:z,intBoolean:D,number:V,object:B,string:I}=r.$,E=(e,t)=>({defaultTitle:`${e}-static`,dependents:[{key:"k",type:"Array",title:t,childType:"Object",parentTitle:e},{key:"a",type:"Constant",title:D.animated,parentTitle:{defaultValue:0,values:{0:`${e}-static`,1:e}}}]}),R={...E(B.animatedValue,M.keyframeList)},F={...E(B.animatedShape,M.shapeKeyframeList)},G={...E(B.animatedPosition,M.positionKeyframeList)},N={...E(B.animatedColor,M.keyframeList)},K={...E(B.animatedMultidimensional,M.keyframeList)},j={[M.composition]:{defaultTitle:B.layerPrecomposition,dependents:[{key:"ty",type:"Constant",title:V.layerType,parentTitle:{prefix:"layer",defaultValue:0,values:{0:"precomposition",1:"solid-color",2:"image",3:"null",4:"shape",5:"text",6:"audio",7:"video-placeholder",8:"image-sequence",9:"video",10:"image-placeholder",11:"guide",12:"adjustment",13:"camera",14:"light",15:"data"}}}]},[M.shapeList]:{defaultTitle:B.shapeRectangle,dependents:[{key:"ty",type:"Constant",title:I.shapeType,parentTitle:{prefix:"shape",defaultValue:"rc",values:{rc:"rectangle",el:"ellipse",sr:"star",sh:"path",fl:"fill",st:"stroke",gf:"gradient-fill",gs:"gradient-stroke",gr:"group",tr:"transform",rd:"rounded-corners",pb:"pucker-bloat",mm:"merge",tw:"twist",op:"offset-path",zz:"zig-zag","":"modifier",rp:"repeater",tm:"trim"}}},{key:"sy",type:"Constant",title:V.shapePolygonStarType,parentTitle:{prefix:"shape",defaultValue:1,values:{1:"star",2:"polygon"}}}]},[M.assets]:{defaultTitle:B.assetPrecomposition,dependents:[{key:"w",type:"Number",title:V.width,parentTitle:B.assetImage},{key:"h",type:"Number",title:V.height,parentTitle:B.assetImage},{key:"t",type:"Constant",title:I.assetType,parentTitle:{prefix:"asset",defaultValue:"seq",values:{seq:"image",3:"data-source"}}},{key:"layers",type:"Array",title:M.composition,parentTitle:B.assetPrecomposition},{key:"mn",type:"String",title:I.matchName,parentTitle:B.assetPrecomposition},{key:"fr",type:"Number",title:V.framerate,parentTitle:B.assetPrecomposition},{key:"xt",type:"Number",title:D.extraComposition,parentTitle:B.assetPrecomposition},{key:"p",type:"String",title:I.filename,parentTitle:B.assetFile},{key:"u",type:"String",title:I.path,parentTitle:B.assetFile},{key:"e",type:"Number",title:D.embedded,parentTitle:B.assetFile}]},[M.effectList]:{defaultTitle:B.effectCustom,dependents:[{key:"ty",type:"Constant",title:V.effectType,parentTitle:{prefix:"effect",defaultValue:5,values:{25:"drop-shadow",21:"fill",29:"gaussian-blur",28:"matte3",24:"pro-levels",22:"stroke",20:"tint",23:"tritone",26:"radial-wipe",32:"wavy",34:"puppet",33:"spherize",7:"paint-over-transparent",31:"mesh-warp",27:"displacement-map",5:"custom"}}}]},[M.effectParamList]:{defaultTitle:B.effectParamSlider,dependents:[{key:"ty",type:"Constant",title:V.effectValueType,parentTitle:{defaultValue:0,prefix:"effect-param",values:{4:"checkbox",2:"color",7:"dropdown",6:"ignored",10:"layer",3:"point",0:"slider",1:"angle"}}}]},[M.layerStyleList]:{defaultTitle:B.layerStyleStroke,dependents:[{key:"ty",type:"Constant",title:V.layerStyleType,parentTitle:{prefix:M.layerStyle,defaultValue:0,values:{0:"stroke",1:"drop-shadow",2:"inner-shadow",3:"outer-glow",4:"inner-glow",5:"bevel-emboss",6:"satin",7:"color-overlay",8:"gradient-overlay"}}}]},[z.animatedPositionProp]:{...G},[z.animatedShapeProp]:{...F},[z.animatedShapeBezier]:{defaultTitle:B.bezier},[z.animatedColorProp]:{...N},[z.animatedMultidimensionalProp]:{...K},[z.anchorPoint]:{...G},[M.keyframeList]:{defaultTitle:B.keyframe},[M.keyframeValue]:{defaultTitle:B.bezier},[M.keyframeEndValue]:{defaultTitle:B.bezier},[M.positionKeyframeList]:{defaultTitle:B.positionKeyframe},[z.keyframeInTangent]:{defaultTitle:B.keyframeBezierHandle},[z.keyframeListInTangent]:{defaultTitle:B.keyframeBezierHandle},[z.keyframeValueInTangent]:{defaultTitle:B.keyframeBezierHandle},[z.positionKeyframeInTangent]:{defaultTitle:B.keyframeBezierHandle},[z.positionKeyframeListInTangent]:{defaultTitle:B.keyframeBezierHandle},[z.keyframeBezierHandleInTangent]:{defaultTitle:B.keyframeBezierHandle},[z.shapeKeyframeInTangent]:{defaultTitle:B.keyframeBezierHandle},[z.keyframeOutTangent]:{defaultTitle:B.keyframeBezierHandle},[z.keyframeListOutTangent]:{defaultTitle:B.keyframeBezierHandle},[z.keyframeValueOutTangent]:{defaultTitle:B.keyframeBezierHandle},[z.positionKeyframeOutTangent]:{defaultTitle:B.keyframeBezierHandle},[z.positionKeyframeListOutTangent]:{defaultTitle:B.keyframeBezierHandle},[z.keyframeBezierHandleOutTangent]:{defaultTitle:B.keyframeBezierHandle},[z.shapeKeyframeOutTangent]:{defaultTitle:B.keyframeBezierHandle},[z.translation]:{defaultTitle:B.animatedPositionStatic,dependents:[{key:"k",type:"Array",title:M.positionKeyframeList,childType:"Object",parentTitle:B.animatedPosition},{key:"a",type:"Constant",title:D.animated,parentTitle:{defaultValue:0,values:{0:B.animatedPositionStatic,1:B.animatedPosition}}},{key:"s",type:"Boolean",title:L.splitEnabled,parentTitle:B.splitVector},{key:"x",type:"Object",title:z.animatedValueProp,parentTitle:B.splitVector},{key:"y",type:"Object",title:z.animatedValueProp,parentTitle:B.splitVector},{key:"z",type:"Object",title:z.animatedValueProp,parentTitle:B.splitVector}]},[z.layerTransformScale]:{...K},[z.shapeTransformScale]:{...K},[z.transformRepeaterScale]:{...K},[z.textStyleScale]:{...K},[z.rotationClockwise]:{...R},[z.polygonRotationClockwise]:{...R},[z.rotationX]:{...R},[z.rotationY]:{...R},[z.rotationZ]:{...R},[z.layerTransformSkew]:{...R},[z.shapeTransformSkew]:{...R},[z.transformRepeaterSkew]:{...R},[z.textStyleSkew]:{...R},[z.layerTransformSkewAxis]:{...R},[z.shapeTransformSkewAxis]:{...R},[z.transformRepeaterSkewAxis]:{...R},[z.textStyleSkewAxis]:{...R},[z.layerTransformOrientation]:{...K},[z.shapeTransformOrientation]:{...K},[z.transformRepeaterOrientation]:{...K},[z.textStyleOrientation]:{...K},[z.shapeRectangleSize]:{...K},[z.layerStyleStrokeSize]:{...K},[z.rounded]:{...R},[z.audioLevel]:{...K},[z.shapeEllipseSize]:{...K},[z.shapeGradientFillStartPoint]:{...K},[z.shapeGradientStrokeStartPoint]:{...K},[z.shapeGradientFillEndPoint]:{...K},[z.shapeGradientStrokeEndPoint]:{...K},[z.splitX]:{...R},[z.splitY]:{...R},[z.splitZ]:{...R},[z.effectValueAngle]:{...R},[z.effectValueCheckbox]:{...R},[z.effectValueColor]:{...N},[z.effectValueDropdown]:{...R},[z.effectValueLayer]:{...R},[z.effectValuePoint]:{...K},[z.effectValueSlider]:{...R},[z.shapeFillOpacity]:{...R},[z.shapeGradientFillOpacity]:{...R},[z.shapeGradientStrokeOpacity]:{...R},[z.layerStyleOpacity]:{...R},[z.shapeStrokeOpacity]:{...R},[z.transformOpacity]:{...R},[z.maskOpacity]:{...R},[z.timeRemapping]:{...R},[z.dilate]:{...R},[z.perspective]:{...R},[z.highlightLength]:{...R},[z.highlightAngle]:{...R},[B.strokeDashDefault]:{...R},[z.miterLimitAlternative]:{...R},[z.strokeWidth]:{...R},[z.shapePolygonOuterRadius]:{...R},[z.shapeStarOuterRadius]:{...R},[z.shapePolygonOuterRoundness]:{...R},[z.shapeStarOuterRoundness]:{...R},[z.shapePolygonPoints]:{...R},[z.shapeStarPoints]:{...R},[z.shapeZigZagsPoints]:{...R},[z.innerRadius]:{...R},[z.innerRoundness]:{...R},[z.amount]:{...R},[z.copies]:{...R},[z.shapeTrimOffset]:{...R},[z.radius]:{...R},[M.shapeKeyframeList]:{defaultTitle:B.shapeKeyframe},[M.shapeKeyframeStart]:{defaultTitle:B.bezier},[B.animatedShapeStatic]:{defaultTitle:B.bezier},[z.shapeTrimStart]:{...R},[z.shapeTrimEnd]:{...R},[z.angle]:{...R},[z.miterLimit]:{...R},[z.roundness]:{...R},[z.shapeZigZagSize]:{...R},[B.layerStyleChokeSpread]:{...R},[z.chokeSpread]:{...R},[z.layerStyleBlendMode]:{...R},[z.blurSize]:{...R},[z.noise]:{...R},[z.distance]:{...R},[z.layerStyleColor]:{...N},[z.layerConceal]:{...R},[z.range]:{...R},[z.jitter]:{...R},[z.source]:{...R},[z.strength]:{...R},[z.bevelStyle]:{...R},[z.technique]:{...R},[z.soften]:{...R},[z.globalAngle]:{...R},[z.altitude]:{...R},[z.highlightMode]:{...R},[z.highlightColor]:{...R},[z.highlightOpacity]:{...R},[z.shadowMode]:{...R},[z.shadowColor]:{...N},[z.shadowOpacity]:{...R},[z.invert]:{...R},[z.smoothness]:{...R},[z.reverse]:{...R},[z.align]:{...R},[B.gradientOverlay]:{...R},[z.firstMargin]:{...R},[z.lastMargin]:{...R},[z.reversePath]:{...R},[z.forceAlignment]:{...R},[z.perpendicularToPath]:{...R},[z.strokeWidth]:{...R},[z.strokeHue]:{...R},[z.strokeSaturation]:{...R},[z.strokeBrightness]:{...R},[z.strokeOpacity]:{...R},[z.strokeHue]:{...R},[z.textFillColor]:{...N},[z.textFillHue]:{...R},[z.textFillBrightness]:{...R},[z.textFillOpacity]:{...R},[z.textFillBrightness]:{...R},[z.letterSpacing]:{...R},[z.textBlur]:{...R},[z.lineSpacing]:{...R},[z.textMinEase]:{...R},[z.textMaxEase]:{...R},[z.textMaxAmount]:{...R},[z.textSelectorStart]:{...R},[z.textSelectorEnd]:{...R},[z.shape]:{...F},[z.maskVertices]:{...F},[z.shapeFillColor]:{...N},[z.shapeStrokeColor]:{...K},[M.documentStrokeColor]:{...N},[M.documentFillColor]:{...N},[z.shapeTrimCenter]:{...K},[z.textGroupAlignment]:{...K},[M.masksProperties]:{defaultTitle:B.mask},[M.textFontList]:{defaultTitle:B.textFont},[z.startOpacity]:{...R},[B.endOpacity]:{...R},[M.strokeDashList]:{defaultTitle:B.strokeDashDefault,dependents:[{key:"n",type:"Constant",title:I.strokeDashType,parentTitle:{prefix:"stroke-dash",defaultValue:"d",values:{d:"default",g:"gap",o:"offset"}}}]},[z.strokeLength]:{...R},[M.markers]:{defaultTitle:B.marker},[z.textCharacterData]:{defaultTitle:B.characterShapes,dependents:[{key:"shapes",type:"Array",title:M.shapeList,parentTitle:B.characterShapes},{key:"refId",type:"String",title:I.idReference,parentTitle:B.characterPrecomp},{key:"ks",type:"Object",title:z.layerTransform,parentTitle:B.characterPrecomp},{key:"ip",type:"Number",title:V.inPoint,parentTitle:B.characterPrecomp},{key:"op",type:"Number",title:V.outPoint,parentTitle:B.characterPrecomp},{key:"sr",type:"Number",title:V.timeStretch,parentTitle:B.characterPrecomp},{key:"st",type:"Number",title:V.timeStart,parentTitle:B.characterPrecomp}]},[M.textDocumentKeyframes]:{defaultTitle:B.textDocumentKeyframe},[M.textRanges]:{defaultTitle:B.textRange},[M.extraCompositions]:{defaultTitle:B.assetPrecomposition},[z.selectorSmoothness]:{...R}},H=(e,t,a="ty")=>{const r=j[e]?.dependents,n=r?.find((e=>e.key===a));if("Constant"!==n?.type)return{};const{prefix:i,values:o}=n.parentTitle,s=i?`${i}-`:"",l=Object.values(o),m={};for(const e of l)"string"==typeof e&&(m[s+e]=t);return m},$={},Z=(e,t)=>{switch(e.type){case"Object":return j[t]||{defaultTitle:t};case"Array":return $[t]||{defaultTitle:t};default:throw new Error("The node.type has to be 'Array' or 'Object'")}},q={required:{p:{[B.assetImage]:I.filename,[B.assetPrecomposition]:I.filename,[B.assetDataSource]:I.filename,[B.assetFile]:I.filename},sc:{[B.layerSolidColor]:I.hexColor},ch:{[M.textCharacters]:I.character},fName:{[B.textFont]:I.fontName},fStyle:{[B.textFont]:I.fontStyle},style:{[M.textCharacters]:I.fontStyle},fFamily:{[B.textFont]:I.fontFamily,[M.textCharacters]:I.fontFamily},f:{[z.textDocument]:I.fontFamily},t:{[z.textDocument]:I.text}},known:{x:{[B.animatedValue]:I.expression,[B.animatedValueStatic]:I.expression,[B.animatedShape]:I.expression,[B.animatedShapeStatic]:I.expression,[B.animatedPosition]:I.expression,[B.animatedPositionStatic]:I.expression,[B.animatedColor]:I.expression,[B.animatedColorStatic]:I.expression,[B.animatedMultidimensional]:I.expression,[B.animatedMultidimensionalStatic]:I.expression,[z.textAnimatedDocument]:I.expression},v:{[B.animation]:I.version},cm:{[B.marker]:I.markerComment},a:{[z.metadata]:I.author},k:{[z.metadata]:I.keyword},d:{[z.metadata]:I.description},tc:{[z.metadata]:I.themeColor},g:{[z.metadata]:I.generator},id:{[B.assetImage]:I.idAssetImage,[B.assetPrecomposition]:I.idAssetPrecomposition,[B.assetDataSource]:I.idAssetDataSource,[B.assetFile]:I.idAssetFile},refId:{[B.layerAudio]:I.idSound,[B.layerPrecomposition]:I.idReference,[B.layerImage]:I.idImage,[B.layerData]:I.idDataSource,[B.characterPrecomp]:I.idReference},u:{[B.assetImage]:I.path,[B.assetPrecomposition]:I.path,[B.assetDataSource]:I.path,[B.assetFile]:I.path},nm:{[B.animation]:I.name,[B.assetImage]:I.name,[B.assetPrecomposition]:I.name,[B.assetDataSource]:I.name,[B.assetFile]:I.name,[B.textRange]:I.name,[z.transformRepeater]:I.name,[B.animatedValue]:I.name,[B.animatedValueStatic]:I.name,[B.animatedShape]:I.name,[B.animatedShapeStatic]:I.name,[B.animatedPosition]:I.name,[B.animatedPositionStatic]:I.name,[B.animatedColor]:I.name,[B.animatedColorStatic]:I.name,[B.animatedMultidimensional]:I.name,[B.animatedMultidimensionalStatic]:I.name,...H(M.effectParamList,I.name),...H(M.effectList,I.name),[B.mask]:I.name,...H(M.composition,I.name),...H(M.shapeList,I.name),[B.strokeDashDefault]:I.name,[B.strokeDashGap]:I.name,[B.strokeDashOffset]:I.name,[B.layerStyleBevelEmboss]:I.name,[B.layerStyleColorOverlay]:I.name,[B.layerStyleDropShadow]:I.name,[B.layerStyleGradientOverlay]:I.name,[B.layerStyleInnerShadow]:I.name,[B.layerStyleOuterGlow]:I.name,[B.layerStyleSatin]:I.name,[B.layerStyleStroke]:I.name,[z.layerTransform]:I.name},mn:{[B.animation]:I.matchName,[B.animatedValue]:I.matchName,[B.animatedValueStatic]:I.matchName,[B.animatedShape]:I.matchName,[B.animatedShapeStatic]:I.matchName,[B.animatedPosition]:I.matchName,[B.animatedPositionStatic]:I.matchName,[B.animatedColor]:I.matchName,[B.animatedColorStatic]:I.matchName,[B.animatedMultidimensional]:I.matchName,[B.animatedMultidimensionalStatic]:I.matchName,...H(M.effectParamList,I.matchName),...H(M.effectList,I.matchName),[B.mask]:I.matchName,...H(M.composition,I.matchName),...H(M.shapeList,I.matchName),[B.strokeDashDefault]:I.matchName,[B.strokeDashGap]:I.matchName,[B.strokeDashOffset]:I.matchName,[B.layerStyleBevelEmboss]:I.name,[B.layerStyleColorOverlay]:I.name,[B.layerStyleDropShadow]:I.name,[B.layerStyleGradientOverlay]:I.name,[B.layerStyleInnerShadow]:I.name,[B.layerStyleOuterGlow]:I.name,[B.layerStyleSatin]:I.name,[B.layerStyleStroke]:I.name,[z.transformRepeater]:I.matchName},ln:{...H(M.composition,I.idLayerXml),...H(M.shapeList,I.idLayerXml)},cl:{...H(M.composition,I.cssClass),...H(M.shapeList,I.cssClass)},fPath:{[B.textFont]:I.fontPath},fWeight:{[B.textFont]:I.fontWeight},fClass:{[B.textFont]:I.fontCssClass},tg:{...H(M.composition,I.layerXmlTagName)},t:{[B.assetImage]:I.assetImageType}}},X={required:{ty:{...H(M.composition,V.layerType),...H(M.shapeList,I.shapeType)}},known:{mode:{[B.mask]:I.maskMode},n:{[B.strokeDashDefault]:I.strokeDashType,[B.strokeDashGap]:I.strokeDashType,[B.strokeDashOffset]:I.strokeDashType},t:{[B.assetImage]:I.assetImageType}}},J={required:{ip:{[B.animation]:V.inPoint,...H(M.composition,V.inPoint)},op:{[B.animation]:V.outPoint,...H(M.composition,V.outPoint),[B.characterPrecomp]:V.outPoint},p:{[z.animatedGradientColors]:V.count},k:{[B.animatedValueStatic]:V.staticValue,[B.animatedMultidimensionalStatic]:V.staticValue,[B.animatedPositionStatic]:V.staticValue,[B.animatedValue]:V.staticValue},w:{[B.animation]:V.width,[B.assetImage]:V.width,[B.assetPrecomposition]:V.width,[M.textCharacters]:V.width,[B.layerPrecomposition]:V.width},sw:{[B.layerSolidColor]:V.width,[z.textDocument]:V.width},h:{[B.animation]:V.height,[B.assetImage]:V.height,[B.assetPrecomposition]:V.height,[B.layerPrecomposition]:V.height},sh:{[B.layerSolidColor]:V.height},size:{[M.textCharacters]:V.fontSize},ls:{[z.textDocument]:V.baselineShift},t:{[B.keyframe]:V.keyframeTime,[M.keyframeList]:V.keyframeListTime,[M.keyframeValue]:V.keyframeValueTime,[B.positionKeyframe]:V.positionKeyframeTime,[M.positionKeyframeList]:V.positionKeyframeListTime,[B.keyframeBezierHandle]:V.keyframeBezierHandleTime,[B.shapeKeyframe]:V.shapeKeyframeTime,[B.textDocumentKeyframe]:V.timeStart},s:{[z.textDocument]:V.fontSize},x:{[B.keyframe]:V.keyframeXAxis,[M.keyframeList]:V.keyframeListXAxis,[M.keyframeValue]:V.keyframeValueXAxis,[B.positionKeyframe]:V.positionKeyframeXAxis,[M.positionKeyframeList]:V.positionKeyframeListXAxis,[B.keyframeBezierHandle]:V.keyframeBezierHandleXAxis},y:{[B.keyframe]:V.keyframeYAxis,[M.keyframeList]:V.keyframeListYAxis,[M.keyframeValue]:V.keyframeValueYAxis,[B.positionKeyframe]:V.positionKeyframeYAxis,[M.positionKeyframeList]:V.positionKeyframeListYAxis,[B.keyframeBezierHandle]:V.keyframeBezierHandleYAxis}},known:{v:{[B.effectParamIgnored]:V.effectValueIgnored},tm:{[B.marker]:V.markerTime},dr:{[B.marker]:V.markerDuration},sa:{[z.motionBlur]:V.shutterAngle},sp:{[z.motionBlur]:V.shutterPhase},spf:{[z.motionBlur]:V.samplesPerFrame},asl:{[z.motionBlur]:V.adaptiveSampleLimit},ix:{...H(M.shapeList,V.propertyIndex),...H(M.effectList,V.propertyIndex),...H(M.effectParamList,V.propertyIndex),[B.animatedValue]:V.propertyIndex,[B.animatedValueStatic]:V.propertyIndex,[B.animatedShape]:V.propertyIndex,[B.animatedShapeStatic]:V.propertyIndex,[B.animatedPosition]:V.propertyIndex,[B.animatedPositionStatic]:V.propertyIndex,[B.animatedColor]:V.propertyIndex,[B.animatedColorStatic]:V.propertyIndex,[B.animatedMultidimensional]:V.propertyIndex,[B.animatedMultidimensionalStatic]:V.propertyIndex},ind:{...H(M.composition,V.compositionIndex),[B.shapePath]:V.shapePathIndex},cix:{...H(M.shapeList,V.expressionPropertyIndex)},fr:{[B.animation]:V.framerate,[B.assetPrecomposition]:V.framerate},sr:{...H(M.composition,V.timeStretch),[B.characterPrecomp]:V.timeStretch},st:{...H(M.composition,V.timeStart),[B.characterPrecomp]:V.timeStart},l:{[B.animatedMultidimensional]:V.length,[B.animatedMultidimensionalStatic]:V.length,[B.animatedPosition]:V.length,[B.animatedPositionStatic]:V.length,[z.translation]:V.length},parent:{...H(M.composition,V.parentIndex)},tp:{[B.layerPrecomposition]:V.matteParent,[B.layerShape]:V.matteParent,[B.layerSolidColor]:V.matteParent,[B.layerImage]:V.matteParent,[B.layerNull]:V.matteParent,[B.layerText]:V.matteParent},ml:{[B.shapeGradientStroke]:V.miterLimitValue,[B.shapeStroke]:V.miterLimitValue},np:{[B.shapeGroup]:V.numberOfProperties,...H(M.effectList,V.effectPropertyCount)},ip:{[B.characterPrecomp]:V.inPoint},ascent:{[B.textFont]:V.ascent},lh:{[z.textDocument]:V.lineHeight},tr:{[z.textDocument]:V.textTracking},ls:{[z.textDocument]:V.baselineShift}}},Y={required:{ty:{...H(M.composition,V.layerType),...H(M.layerStyleList,V.layerStyleType),...H(M.effectParamList,V.effectType),...H(M.effectList,V.effectType)},bm:{...H(M.composition,V.blendMode),...H(M.shapeList,V.blendMode)},d:{[B.shapeEllipse]:V.shapeDirection,[B.shapePath]:V.shapeDirection,[B.shapePolygon]:V.shapeDirection,[B.shapeStar]:V.shapeDirection,[B.shapeRectangle]:V.shapeDirection},t:{[B.assetDataSource]:V.dataSourceType},origin:{[B.textFont]:V.fontPathOrigin},b:{[z.textSelector]:V.textBased},sh:{[z.textSelector]:V.textShape}},known:{tt:{[B.layerPrecomposition]:V.matteMode,[B.layerShape]:V.matteMode,[B.layerSolidColor]:V.matteMode,[B.layerImage]:V.matteMode,[B.layerNull]:V.matteMode,[B.layerText]:V.matteMode},m:{[B.shapeRepeater]:V.composite,[B.shapeTrim]:V.trimMultipleShapes,[z.textFollowPath]:V.textMask},mm:{[B.shapeMerge]:V.mergeMode},r:{[B.shapeFill]:V.fillRule,[B.shapeGradientFill]:V.fillRule,[z.textSelector]:V.rangeUnits},t:{[B.shapeGradientFill]:V.gradientType,[B.shapeGradientStroke]:V.gradientType},gt:{[B.layerStyleGradientOverlay]:V.gradientType},lc:{[B.shapeGradientStroke]:V.lineCap,[B.shapeStroke]:V.lineCap},lj:{[B.shapeGradientStroke]:V.lineJoin,[B.shapeStroke]:V.lineJoin,[B.shapeOffsetPath]:V.lineJoin},sy:{[B.shapePolygon]:V.shapePolygonStarType,[B.shapeStar]:V.shapePolygonStarType},g:{[z.textAlignmentOptions]:V.textGrouping},j:{[z.textDocument]:V.textJustify},ca:{[z.textDocument]:V.textCaps},vj:{[z.textDocument]:V.textVerticalJustify}}},W={required:{},known:{}},_={required:{t:{[z.textSelector]:D.expressible}},known:{rn:{[z.textSelector]:D.randomize},ddd:{[B.animation]:D.threedimensional,...H(M.composition,D.layerThreedimensional)},ao:{[B.layerPrecomposition]:D.autoOrient,[B.layerShape]:D.autoOrient,[B.layerSolidColor]:D.autoOrient,[B.layerImage]:D.autoOrient,[B.layerNull]:D.autoOrient,[B.layerText]:D.autoOrient},a:{[B.animatedValue]:D.animated,[B.animatedValueStatic]:D.animated,[B.animatedShape]:D.animated,[B.animatedShapeStatic]:D.animated,[B.animatedPosition]:D.animated,[B.animatedPositionStatic]:D.animated,[B.animatedColor]:D.animated,[B.animatedColorStatic]:D.animated,[B.animatedMultidimensional]:D.animated,[B.animatedMultidimensionalStatic]:D.animated},e:{[B.assetImage]:D.embedded,[B.assetDataSource]:D.embedded,[B.assetFile]:D.embedded},en:{...H(M.effectList,D.enabled)},xt:{[B.assetPrecomposition]:D.extraComposition},h:{[B.keyframe]:D.hold,[M.keyframeList]:D.hold,[M.keyframeValue]:D.hold,[B.positionKeyframe]:D.hold,[M.positionKeyframeList]:D.hold,[B.keyframeBezierHandle]:D.hold,[B.shapeKeyframe]:D.hold},ct:{[B.layerPrecomposition]:D.collapseTransformNew,[B.layerShape]:D.collapseTransformNew,[B.layerSolidColor]:D.collapseTransformNew,[B.layerImage]:D.collapseTransformNew,[B.layerNull]:D.collapseTransformNew,[B.layerText]:D.collapseTransformNew},td:{[B.layerPrecomposition]:D.matteTarget,[B.layerShape]:D.matteTarget,[B.layerSolidColor]:D.matteTarget,[B.layerImage]:D.matteTarget,[B.layerNull]:D.matteTarget,[B.layerText]:D.matteTarget}}},U={required:{s:{[B.splitVector]:L.splitEnabled}},known:{c:{[B.bezier]:L.bezierClosed},inv:{[B.mask]:L.inverted},hd:{...H(M.composition,L.hidden),...H(M.shapeList,L.hidden)},cp:{[B.layerPrecomposition]:L.collapseTransform,[B.layerShape]:L.collapseTransform,[B.layerSolidColor]:L.collapseTransform,[B.layerImage]:L.collapseTransform,[B.layerNull]:L.collapseTransform,[B.layerText]:L.collapseTransform},hasMask:{[B.layerPrecomposition]:L.hasMask,[B.layerShape]:L.hasMask,[B.layerSolidColor]:L.hasMask,[B.layerImage]:L.hasMask,[B.layerNull]:L.hasMask,[B.layerText]:L.hasMask},mb:{[B.layerPrecomposition]:L.motionBlurEnabled,[B.layerShape]:L.motionBlurEnabled,[B.layerSolidColor]:L.motionBlurEnabled,[B.layerImage]:L.motionBlurEnabled,[B.layerNull]:L.motionBlurEnabled,[B.layerText]:L.motionBlurEnabled},of:{[z.textDocument]:L.strokeOverFill}}},Q={required:{assets:{[B.animation]:M.assets},layers:{[B.animation]:M.composition,[B.assetPrecomposition]:M.composition},shapes:{[B.layerShape]:M.shapeList,[B.characterShapes]:M.shapeList},ef:{...H(M.effectList,M.effectParamList)},i:{[B.bezier]:M.bezierInTangents},o:{[B.bezier]:M.bezierOutTangents},v:{[B.bezier]:M.bezierVertices},k:{[z.textAnimatedDocument]:M.textDocumentKeyframes,[B.animatedValue]:M.keyframeList,[B.animatedValueStatic]:M.staticValues,[B.animatedMultidimensional]:M.keyframeList,[B.animatedMultidimensionalStatic]:M.staticValues,[B.animatedPosition]:M.positionKeyframeList,[B.animatedPositionStatic]:M.staticValues,[B.animatedColor]:M.keyframeList,[B.animatedShape]:M.shapeKeyframeList,[B.animatedColorStatic]:M.colorRgba},a:{[z.textAnimatorData]:M.textRanges},x:{[B.keyframeBezierHandle]:M.bezierXAxis},y:{[B.keyframeBezierHandle]:M.bezierYAxis},s:{[B.shapeKeyframe]:M.shapeKeyframeStart},fc:{[z.textDocument]:M.documentFillColor}},known:{k:{[z.metadata]:M.keywords},comps:{[B.animation]:M.extraCompositions},chars:{[B.animation]:M.textCharacters},markers:{[B.animation]:M.markers},masksProperties:{[B.layerPrecomposition]:M.masksProperties,[B.layerShape]:M.masksProperties,[B.layerSolidColor]:M.masksProperties,[B.layerImage]:M.masksProperties,[B.layerNull]:M.masksProperties,[B.layerText]:M.masksProperties},ef:{[B.layerPrecomposition]:M.effectList,[B.layerShape]:M.effectList,[B.layerSolidColor]:M.effectList,[B.layerImage]:M.effectList,[B.layerNull]:M.effectList,[B.layerText]:M.effectList},sy:{[B.layerPrecomposition]:M.layerStyle,[B.layerShape]:M.layerStyle,[B.layerSolidColor]:M.layerStyle,[B.layerImage]:M.layerStyle,[B.layerNull]:M.layerStyle,[B.layerText]:M.layerStyle},d:{[B.shapeGradientStroke]:M.strokeDashList,[B.shapeStroke]:M.strokeDashList},it:{[B.shapeGroup]:M.shapeList},s:{[B.keyframe]:M.keyframeValue,[M.keyframeList]:M.keyframeValue,[B.positionKeyframe]:M.keyframeValue,[M.positionKeyframeList]:M.keyframeValue,[B.keyframeBezierHandle]:M.keyframeValue},e:{[B.keyframe]:M.keyframeEndValue,[M.keyframeList]:M.keyframeEndValue,[M.keyframeValue]:M.keyframeEndValue,[B.positionKeyframe]:M.keyframeEndValue,[M.positionKeyframeList]:M.keyframeEndValue,[B.keyframeBezierHandle]:M.keyframeEndValue,[B.shapeKeyframe]:M.keyframeEndValue},to:{[B.positionKeyframe]:M.positionKeyframeOutTangents},ti:{[B.positionKeyframe]:M.positionKeyframeInTangents},sz:{[z.textDocument]:M.wrapSize},sc:{[z.textDocument]:M.documentStrokeColor},ps:{[z.textDocument]:M.wrapPosition},list:{[z.textFonts]:M.textFontList}}},ee={required:{r:{[z.layerTransform]:z.rotationClockwise,[B.shapeTransform]:z.rotationClockwise,[z.transformRepeater]:z.rotationClockwise,[z.textStyle]:z.rotationClockwise,[B.shapePolygon]:z.polygonRotationClockwise,[B.shapeStar]:z.polygonRotationClockwise,[B.shapeRectangle]:z.rounded,[B.shapeRoundedCorners]:z.radius},au:{[B.layerAudio]:z.layerAudioSettings},t:{[B.layerText]:z.textAnimatorData},pe:{[B.layerCamera]:z.perspective},ks:{[B.layerPrecomposition]:z.layerTransform,[B.layerShape]:z.layerTransform,[B.layerSolidColor]:z.layerTransform,[B.layerImage]:z.layerTransform,[B.layerNull]:z.layerTransform,[B.layerText]:z.layerTransform,[B.layerCamera]:z.layerTransform,[B.shapePath]:z.animatedShapeProp},p:{[B.shapeEllipse]:z.animatedPositionProp,[B.shapePolygon]:z.animatedPositionProp,[B.shapeStar]:z.animatedPositionProp,[B.shapeRectangle]:z.animatedPositionProp,[z.textAnimatorData]:z.textFollowPath},s:{[B.shapeEllipse]:z.shapeEllipseSize,[B.shapeGradientFill]:z.shapeGradientFillStartPoint,[B.shapeGradientStroke]:z.shapeGradientStrokeStartPoint,[B.shapeRectangle]:z.shapeRectangleSize,[B.shapeTrim]:z.shapeTrimStart,[B.textDocumentKeyframe]:z.textDocument,[B.layerStyleStroke]:z.blurSize,[B.layerStyleDropShadow]:z.blurSize,[B.layerStyleInnerShadow]:z.blurSize,[B.layerStyleBevelEmboss]:z.blurSize,[B.layerStyleSatin]:z.blurSize},o:{[B.shapeFill]:z.shapeFillOpacity,[B.shapeGradientFill]:z.shapeGradientFillOpacity,[B.shapeTrim]:z.shapeTrimOffset,[B.shapeGradientStroke]:z.strokeOpacity,[B.shapeStroke]:z.strokeOpacity},c:{[B.shapeFill]:z.shapeFillColor,[B.shapeRepeater]:z.copies,[B.shapeStroke]:z.shapeStrokeColor},e:{[B.shapeGradientFill]:z.shapeGradientFillEndPoint,[B.shapeGradientStroke]:z.shapeGradientStrokeEndPoint,[B.shapeTrim]:z.shapeTrimEnd},g:{[B.shapeGradientFill]:z.animatedGradientColors,[B.shapeGradientStroke]:z.animatedGradientColors},or:{[B.shapePolygon]:z.shapePolygonOuterRadius,[B.shapeStar]:z.shapeStarOuterRadius},os:{[B.shapePolygon]:z.shapePolygonOuterRoundness,[B.shapeStar]:z.shapeStarOuterRoundness},pt:{[B.shapePolygon]:z.shapePolygonPoints,[B.shapeStar]:z.shapeStarPoints},ir:{[B.shapeStar]:z.innerRadius},is:{[B.shapeStar]:z.innerRoundness},tr:{[B.shapeRepeater]:z.transformRepeater},data:{[M.textCharacters]:z.textCharacterData},a:{[z.textSelector]:z.textMaxAmount},d:{[z.textAnimatorData]:z.textAnimatedDocument},k:{[B.animatedShapeStatic]:z.animatedShapeBezier,[z.animatedGradientColors]:z.animatedMultidimensionalProp},lv:{[z.layerAudioSettings]:z.audioLevel},x:{[B.splitVector]:z.splitX},y:{[B.splitVector]:z.splitY},z:{[B.splitVector]:z.splitZ},lc:{[B.layerStyleDropShadow]:z.layerConceal},m:{[z.textAnimatorData]:z.textAlignmentOptions},w:{[B.shapeGradientStroke]:z.strokeWidth,[B.shapeStroke]:z.strokeWidth}},known:{xe:{[z.textSelector]:z.textMaxEase},ne:{[z.textSelector]:z.textMinEase},meta:{[B.animation]:z.metadata},[z.metadata]:{[B.animation]:z.userMetadata},mb:{[B.animation]:z.motionBlur},fonts:{[B.animation]:z.textFonts},v:{[B.strokeDashDefault]:z.strokeLength,[B.strokeDashGap]:z.strokeLength,[B.strokeDashOffset]:z.strokeLength,[B.effectParamAngle]:z.effectValueAngle,[B.effectParamCheckbox]:z.effectValueCheckbox,[B.effectParamColor]:z.effectValueColor,[B.effectParamDropdown]:z.effectValueDropdown,[B.effectParamLayer]:z.effectValueLayer,[B.effectParamPoint]:z.effectValuePoint,[B.effectParamSlider]:z.effectValueSlider},rx:{[z.layerTransform]:z.rotationX,[B.shapeTransform]:z.rotationX,[z.transformRepeater]:z.rotationX,[z.textStyle]:z.rotationX},ry:{[z.layerTransform]:z.rotationY,[B.shapeTransform]:z.rotationY,[z.transformRepeater]:z.rotationY,[z.textStyle]:z.rotationY},rz:{[z.layerTransform]:z.rotationZ,[B.shapeTransform]:z.rotationZ,[z.transformRepeater]:z.rotationZ,[z.textStyle]:z.rotationZ},or:{[z.layerTransform]:z.layerTransformOrientation,[B.shapeTransform]:z.shapeTransformOrientation,[z.transformRepeater]:z.transformRepeaterOrientation,[z.textStyle]:z.textStyleOrientation},a:{[z.layerTransform]:z.anchorPoint,[z.transformRepeater]:z.anchorPoint,[B.shapeTransform]:z.anchorPoint,[z.textStyle]:z.anchorPoint,[B.shapeGradientFill]:z.highlightAngle,[B.shapeGradientStroke]:z.highlightAngle,[B.shapePuckerBloat]:z.amount,[B.shapeTwist]:z.angle,[B.shapeOffsetPath]:z.amount,[B.textRange]:z.textStyle,[z.textFollowPath]:z.forceAlignment,[z.textSelector]:z.textMaxAmount,[z.textAlignmentOptions]:z.textGroupAlignment,[B.layerStyleDropShadow]:z.angle,[B.layerStyleInnerShadow]:z.angle,[B.layerStyleBevelEmboss]:z.angle,[B.layerStyleSatin]:z.angle,[B.layerStyleGradientOverlay]:z.angle},s:{[z.layerTransform]:z.layerTransformScale,[B.shapeTransform]:z.shapeTransformScale,[z.transformRepeater]:z.transformRepeaterScale,[z.textStyle]:z.textStyleScale,[B.shapeZigZags]:z.shapeZigZagSize,[B.textRange]:z.textSelector,[B.layerStyleStroke]:z.layerStyleStrokeSize,[B.layerStyleGradientOverlay]:z.gradientOverlayScale,[z.textSelector]:z.textSelectorStart},o:{[z.layerTransform]:z.transformOpacity,[B.shapeTransform]:z.transformOpacity,[z.transformRepeater]:z.transformOpacity,[z.textStyle]:z.transformOpacity,[z.textSelector]:z.shapeTrimOffset,[B.shapeFill]:z.shapeFillOpacity,[B.shapeGradientFill]:z.shapeGradientFillOpacity,[B.shapeGradientStroke]:z.shapeGradientStrokeOpacity,[B.shapeStroke]:z.shapeStrokeOpacity,[B.mask]:z.maskOpacity,[B.shapeRepeater]:z.shapeTrimOffset,[B.keyframe]:z.keyframeOutTangent,[M.keyframeList]:z.keyframeListOutTangent,[M.keyframeValue]:z.keyframeValueOutTangent,[B.positionKeyframe]:z.positionKeyframeOutTangent,[M.positionKeyframeList]:z.positionKeyframeListOutTangent,[B.keyframeBezierHandle]:z.keyframeBezierHandleOutTangent,[B.shapeKeyframe]:z.shapeKeyframeOutTangent,[B.layerStyleDropShadow]:z.layerStyleOpacity,[B.layerStyleInnerShadow]:z.layerStyleOpacity,[B.layerStyleBevelEmboss]:z.layerStyleOpacity,[B.layerStyleSatin]:z.layerStyleOpacity,[B.layerStyleColorOverlay]:z.layerStyleOpacity,[B.layerStyleGradientOverlay]:z.layerStyleOpacity},i:{[B.keyframe]:z.keyframeInTangent,[M.keyframeList]:z.keyframeListInTangent,[M.keyframeValue]:z.keyframeValueInTangent,[B.positionKeyframe]:z.positionKeyframeInTangent,[M.positionKeyframeList]:z.positionKeyframeListInTangent,[B.keyframeBezierHandle]:z.keyframeBezierHandleInTangent,[B.shapeKeyframe]:z.shapeKeyframeInTangent},sk:{[z.layerTransform]:z.layerTransformSkew,[B.shapeTransform]:z.shapeTransformSkew,[z.transformRepeater]:z.transformRepeaterSkew,[z.textStyle]:z.textStyleSkew},sa:{[z.layerTransform]:z.layerTransformSkewAxis,[B.shapeTransform]:z.shapeTransformSkewAxis,[z.transformRepeater]:z.transformRepeaterSkewAxis,[z.textStyle]:z.textStyleSkewAxis},p:{[z.layerTransform]:z.translation,[B.shapeTransform]:z.translation,[z.transformRepeater]:z.translation,[z.textStyle]:z.translation,[z.textFollowPath]:z.perpendicularToPath},pt:{[B.mask]:z.maskVertices,[B.shapeZigZags]:z.shapeZigZagsPoints},x:{[B.mask]:z.dilate},tm:{[B.layerPrecomposition]:z.timeRemapping},h:{[B.shapeGradientFill]:z.highlightLength,[B.shapeGradientStroke]:z.highlightLength},r:{[B.shapeGradientFill]:z.shapeGradientFillRule,[B.shapeZigZags]:z.roundness,[z.textFollowPath]:z.reversePath,[B.layerStyleOuterGlow]:z.range},ml2:{[B.shapeGradientStroke]:z.miterLimitAlternative,[B.shapeStroke]:z.miterLimitAlternative},w:{[B.shapeGradientStroke]:z.strokeWidth,[B.shapeStroke]:z.strokeWidth},c:{[B.shapeTrim]:z.shapeTrimCenter,[B.layerStyleStroke]:z.layerStyleColor,[B.layerStyleDropShadow]:z.layerStyleColor,[B.layerStyleInnerShadow]:z.layerStyleColor,[B.layerStyleBevelEmboss]:z.layerStyleColor,[B.layerStyleOuterGlow]:z.layerStyleColor},ml:{[B.shapeOffsetPath]:z.miterLimit},so:{[B.layerStyleBevelEmboss]:z.shadowOpacity,[B.layerStyleColorOverlay]:z.layerStyleOpacity,[z.transformRepeater]:z.startOpacity},eo:{[z.transformRepeater]:z.startOpacity},ks:{[B.characterPrecomp]:z.layerTransform,[B.shapePath]:z.shape},f:{[z.textFollowPath]:z.firstMargin},l:{[z.textFollowPath]:z.lastMargin},sw:{[z.textStyle]:z.strokeWidth},sc:{[z.textStyle]:z.strokeColor,[z.textDocument]:z.strokeColor,[B.layerStyleBevelEmboss]:z.shadowColor},sh:{[z.textStyle]:z.strokeHue},ss:{[z.textStyle]:z.strokeSaturation},sb:{[z.textStyle]:z.strokeBrightness},fc:{[z.textStyle]:z.textFillColor},fh:{[z.textStyle]:z.textFillHue},fs:{[z.textStyle]:z.textFillSaturation},fo:{[z.textStyle]:z.textFillOpacity},fb:{[z.textStyle]:z.textFillBrightness},t:{[z.textStyle]:z.letterSpacing},bl:{[z.textStyle]:z.textBlur},ls:{[z.textStyle]:z.lineSpacing},sm:{[z.textSelector]:z.selectorSmoothness,[B.layerStyleBevelEmboss]:z.shadowMode},e:{[z.textSelector]:z.textSelectorEnd},gf:{[B.layerStyleGradientOverlay]:z.animatedGradientColors},ch:{[B.layerStyleDropShadow]:z.chokeSpread,[B.layerStyleInnerShadow]:z.chokeSpread,[B.layerStyleBevelEmboss]:z.chokeSpread,[B.layerStyleOuterGlow]:z.chokeSpread},bm:{[B.layerStyleDropShadow]:z.layerStyleBlendMode,[B.layerStyleInnerShadow]:z.layerStyleBlendMode,[B.layerStyleBevelEmboss]:z.layerStyleBlendMode,[B.layerStyleSatin]:z.layerStyleBlendMode,[B.layerStyleColorOverlay]:z.layerStyleBlendMode,[B.layerStyleGradientOverlay]:z.layerStyleBlendMode},no:{[B.layerStyleDropShadow]:z.noise,[B.layerStyleInnerShadow]:z.noise,[B.layerStyleOuterGlow]:z.noise,[B.layerStyleInnerGlow]:z.noise},d:{[B.layerStyleDropShadow]:z.distance,[B.layerStyleInnerShadow]:z.distance,[B.layerStyleBevelEmboss]:z.distance,[B.layerStyleOuterGlow]:z.distance},j:{[B.layerStyleOuterGlow]:z.jitter},sr:{[B.layerStyleInnerGlow]:z.source,[B.layerStyleBevelEmboss]:z.strength},bs:{[B.layerStyleBevelEmboss]:z.bevelStyle},bt:{[B.layerStyleBevelEmboss]:z.technique},sf:{[B.layerStyleBevelEmboss]:z.soften},ga:{[B.layerStyleBevelEmboss]:z.globalAngle},ll:{[B.layerStyleBevelEmboss]:z.altitude},hm:{[B.layerStyleBevelEmboss]:z.highlightMode},hc:{[B.layerStyleBevelEmboss]:z.highlightColor},ho:{[B.layerStyleBevelEmboss]:z.highlightOpacity},in:{[B.layerStyleSatin]:z.invert},gs:{[B.layerStyleGradientOverlay]:z.smoothness},re:{[B.layerStyleGradientOverlay]:z.reverse},al:{[B.layerStyleGradientOverlay]:z.align},of:{[B.layerStyleGradientOverlay]:z.shapeTrimOffset}}},te=(e,t,a,r)=>{const n=(a.required[e]||{})[t];if(n)return{type:r,title:n,parentTitle:t,required:!0};return{type:r,title:(a.known[e]||{})[t]||A,parentTitle:t,required:!1}},ae=(e,t,a)=>{switch(t.value.type){case"String":const r=te(e,a,q,"attribute");return r.title!==A?r:((e,t,a)=>{const r=te(e,a,X,"constant");if(r.title!==A){const e=C.get(r.title);if(!e)return r;const a=e.get(t.value);a&&(r.title=`${r.title}-${a}`)}return r})(e,t.value,a);case"Boolean":return te(e,a,U,"attribute");case"Number":const n=te(e,a,J,"attribute");return n.title!==A?n:((e,t,a)=>{const r=te(e,a,Y,"constant");if(r.title!==A){const e=P.get(r.title);if(!e)return r;const a=e.get(t.value);return a&&(r.title=`${r.title}-${a}`),r}return te(e,a,_,"integer-boolean")})(e,t.value,a);case"Null":return te(e,a,W,"attribute");default:return{type:"missing",title:A,parentTitle:a,required:!1}}},re=(e,t,a)=>{switch(t.value.type){case"Array":return((e,t)=>te(e,t,Q,"collection"))(e,a);case"Object":return((e,t)=>te(e,t,ee,"element"))(e,a);default:return ae(e,t,a)}},ne=Object.defineProperty,ie=(e,t,a)=>(((e,t,a)=>{t in e?ne(e,t,{enumerable:!0,configurable:!0,writable:!0,value:a}):e[t]=a})(e,"symbol"!=typeof t?t+"":t,a),a),oe={position:!0,valueType:!0},se=a(44345),le=a(6521);function me(e){if(Array.isArray(e))return e;if("function"==typeof e){return me(e())}return typeof e>"u"?[]:[e]}function pe(e){if(Array.isArray(e))return e.length>0?[e[0]]:[];if("function"==typeof e){return pe(e())}return typeof e>"u"?[]:[e]}function ce(e){return void 0===e?"empty":e}var ye=(e,t,a)=>(0,le.u)("object",{title:e,...a},[...me(t)]),de=(e,t,a)=>(0,le.u)("array",{title:e,...a},[...me(t)]);const fe=function e(t,a,r,n,i){const o=ue(a);if(null!=r&&("number"!=typeof r||r<0||r===Number.POSITIVE_INFINITY))throw new Error("Expected positive finite index");if(!(null==n||e(n)&&n.children))throw new Error("Expected parent node");if(null==n!=(null==r))throw new Error("Expected both parent and index");return!(!t||!t.type||"string"!=typeof t.type)&&Boolean(o.call(i,t,r,n))},ue=function(e){if(null==e)return ge;if("string"==typeof e)return function(e){return he(t);function t(t){return t&&t.type===e}}(e);if("object"==typeof e)return Array.isArray(e)?function(e){const t=[];let a=-1;for(;++a<e.length;)t[a]=ue(e[a]);return he(r);function r(...e){let a=-1;for(;++a<t.length;)if(t[a].call(this,...e))return!0;return!1}}(e):function(e){return he(t);function t(t){let a;for(a in e)if(t[a]!==e[a])return!1;return!0}}(e);if("function"==typeof e)return he(e);throw new Error("Expected function, string, or object as test")};function he(e){return function(...t){return Boolean(e.call(this,...t))}}function ge(){return!0}var ke=(e,t)=>t.position?{position:{...e.loc}}:{},Se=(e,t)=>{const a=ke(e,t),r=((e,t)=>t.valueType&&"Array"!==e.type&&"Object"!==e.type&&"Document"!==e.type?{valueType:e.type.toLowerCase()}:{})(e,t);return n=e.value,i={...a,...r},(0,le.u)("primitive",{value:ce(n),...i});var n,i},xe=(e,t)=>{const a=e.name.value;if(t.position){const i=ke(e.name,t);return r=a,n={...i},(0,le.u)("key",{...n},r)}return a;var r,n},be=(e,t,a)=>{const r=xe(e,a),n="string"==typeof r?r:r.value,i={...ke(e,a)},{title:o}=re(n,e,t);switch(e.value.type){case"Array":return s=r,l=o,m=[],p={...i},(0,le.u)("collection",{key:s,title:l,...p},pe(m));case"Object":return((e,t,a,r)=>(0,le.u)("element",{key:e,title:t,...r},pe(a)))(r,o,[],{...i});default:return((e,t,a,r)=>(0,le.u)("attribute",{key:e,title:t,...r},pe(a)))(r,o,[],{...i})}var s,l,m,p},Te=(e,t)=>t.loc.end.column===e.loc.end.column;function we(e,t,a){fe(e,t)||a.fail(`Unexpected node type found ${e?.type}, has to be 'array'`)}var ve=(e,t,a,r)=>{const{key:n,parentTitle:i,type:s}=a;switch(s){case"Constant":if(!fe(e,"String")&&!fe(e,"Number"))break;const{defaultValue:l,prefix:m,values:p}=i,c=p[l];if(!c)throw new Error(`[${t}] '${l}' has to present in "dependent.parentTitle.values"`);const y=e.value,d=p[y];if(!d){const a=`[${t}] '${y}' is missing in "dependent.parentTitle.values"`;r.message(a,e,o)}const f=void 0===d?c:d;return m&&m.length>0?`${m}-${f}`:f;case"Array":if(!fe(e,"Array"))break;const u=a.childType;if(!(u?e.elements.find((e=>e.type===u)):void 0))break;return i;default:if(s!==e.type){const a=`${t}'s '${n}' type is ${e.type} but has to be ${s}`;r.message(a,e,o);break}return i}},Pe=(e,t,a,r)=>{const n=t.reduce(((e,t)=>(e[t.name.value]=t.value,e)),{});for(const t of a){const{key:a}=t,i=n[a];if(!i)continue;const o=ve(i,e,t,r);if(o)return o}},Oe=(e,t,a)=>{const r=Z(e,t),{defaultTitle:n,dependents:i}=r;if(!i)return n;return Pe(t,e.members,i,a)||n},Ce=(e,t,a)=>{const r=Z(e,t),{defaultTitle:n,dependents:i}=r;if(!i)return n;const o=(e=>{const t=[];return e.elements.forEach((e=>{fe(e,"Object")&&e.members.forEach((e=>t.push(e)))})),t})(e);return Pe(t,o,i,a)||n},Le=(e,t,a,n,i)=>{const o=ke(e,i);switch(e.type){case"Document":"Object"!==e.body.type&&n.fail(new Error(`Lottie must be "Object" but it's "${e.body.type}"`));break;case"Member":const m=a.peek();a.push(be(e,m.title,i));break;case"Object":switch(t.type){case"Document":a.push((s=[],l={...o},(0,le.u)("root",{title:r.$.object.animation,hasExpressions:!1,...l},[...me(s)])));break;case"Member":const t=a.peek();we(t,"element",n);const i=Oe(e,t.title,n);a.push(ye(i,[],{...o}));break;case"Array":const m=a.peek();we(m,"array",n);const p=Oe(e,m.title,n);a.push(ye(p,[],{...o}))}break;case"Array":switch(t.type){case"Member":const t=a.peek();we(t,"collection",n);const r=Ce(e,t.title,n);a.push(de(r,[],{...o}));break;case"Array":const i=a.peek();we(i,"array",n);const s=Ce(e,i.title,n);a.push(de(s,[],{...o}))}break;default:switch(t.type){case"Member":Te(e,t)&&a.push(Se(e,i));break;case"Array":a.push(Se(e,i))}}var s,l};function Me(e,t,a={}){const r=(0,se.Qc)(e,{tokens:!1}),n={...oe,...a.parse},i=new class{constructor(e=1/0){this._capacity=e,ie(this,"_keys",[]),ie(this,"_storage",new WeakMap)}peek(){const e=this.size(),t=this._keys[e-1];return t?this._storage.get(t):void 0}pop(){const e=this._keys.pop();if(void 0!==e){const t=this._storage.get(e);return this._storage.delete(e),t}}push(e){if(this.size()===this._capacity)throw Error("Stack has reached max capacity, you cannot add more items");const t={i:this._keys.length};this._storage.set(t,e),this._keys.push(t)}size(){return this._keys.length}},o={hasExpressions:!1};(0,se.fw)(r,{enter(e,a){Le(e,a,i,t,n)},exit(e,a){((e,t,a,r,n,i)=>{switch(e.type){case"Document":break;case"Member":const n=a.pop();switch(n.type){case"element":case"collection":break;case"attribute":i.hasExpressions||"expression"!==n.title||(i.hasExpressions=!0);break;default:r.fail("Node's type has to be 'element', 'collection or 'attribute'")}const o=a.peek();switch(o.type){case"object":case"root":break;default:r.fail("ParentNode's type has to be 'object' or 'root'")}o.children.push(n);break;case"Object":switch(t.type){case"Document":break;case"Member":const e=a.pop();we(e,"object",r);const t=a.peek();we(t,"element",r),e.title===t.title&&(e.title=`${t.title}-children`),t.children=[e];break;case"Array":const n=a.pop();we(n,"object",r);const i=a.peek();we(i,"array",r),i.children.push(n)}break;case"Array":switch(t.type){case"Member":const e=a.pop();we(e,"array",r);const t=a.peek();we(t,"collection",r),e.title===t.title&&(e.title=`${t.title}-children`),t.children=[e];break;case"Array":const n=a.pop();we(n,"array",r);const i=a.peek();we(i,"array",r),i.children.push(n)}break;default:switch(t.type){case"Member":if(Te(e,t)){const e=a.pop();we(e,"primitive",r);const t=a.peek();we(t,"attribute",r),t.children=[e]}break;case"Array":const n=a.pop();we(n,"primitive",r);const i=a.peek();we(i,"array",r),i.children.push(n)}}})(e,a,i,t,0,o)}});const s=i.pop();if(fe(s,"root"))return s.hasExpressions=o.hasExpressions,s;t.fail(`Stack's last item has to be "root" but it's "${s?.type}"`,s)}var Ae=function(e={}){const t=this.data("settings")||{parse:{}};t.parse={...t.parse,...e};Object.assign(this,{Parser:(e,a)=>Me(e,a,t)})}},68310:function(e,t,a){a.d(t,{v:function(){return s}});var r=a(10740);function n(e){const t=e=>{const t={};return e.children.forEach((e=>{const a="string"==typeof e.key?e.key:e.key.value,r=e.children[0];r&&(t[a]=n(r))})),t};switch(e.type){case"primitive":switch(typeof e.value){case"number":case"string":case"boolean":return e.value;case"object":return null;default:throw new Error(`Unknown Primitive type ${e.type}.`)}case"attribute":case"collection":case"element":return e.children[0]?n(e.children[0]):null;case"array":return e.children.map(n);case"root":case"object":return t(e);default:throw new Error(`Unknown node type ${e.type}.`)}}var i={indent:0};var o=function(e={}){const t=this.data("settings")||{stringify:{}};t.stringify={...t.stringify,...e};Object.assign(this,{Compiler:(e,a)=>function(e,t,a={}){const r={...i,...a.stringify},o=n(e);return JSON.stringify(o,null,r.indent)}(e,0,t)})},s=(0,a(47588).l)().use(r.ZP).use(o).freeze()},58230:function(e,t,a){a.d(t,{S4:function(){return l}});const r=function(e){if(null==e)return i;if("function"==typeof e)return n(e);if("object"==typeof e)return Array.isArray(e)?function(e){const t=[];let a=-1;for(;++a<e.length;)t[a]=r(e[a]);return n(i);function i(...e){let a=-1;for(;++a<t.length;)if(t[a].apply(this,e))return!0;return!1}}(e):function(e){const t=e;return n(a);function a(a){const r=a;let n;for(n in e)if(r[n]!==t[n])return!1;return!0}}(e);if("string"==typeof e)return function(e){return n(t);function t(t){return t&&t.type===e}}(e);throw new Error("Expected function, string, or object as test")};function n(e){return function(t,a,r){return Boolean(o(t)&&e.call(this,t,"number"==typeof a?a:void 0,r||void 0))}}function i(){return!0}function o(e){return null!==e&&"object"==typeof e&&"type"in e}const s=[];function l(e,t,a,n){let i;"function"==typeof t&&"function"!=typeof a?(n=a,a=t):i=t;const o=r(i),l=n?-1:1;!function e(r,i,m){const p=r&&"object"==typeof r?r:{};if("string"==typeof p.type){const e="string"==typeof p.tagName?p.tagName:"string"==typeof p.name?p.name:void 0;Object.defineProperty(c,"name",{value:"node ("+r.type+(e?"<"+e+">":"")+")"})}return c;function c(){let p,c,y,d=s;if((!t||o(r,i,m[m.length-1]||void 0))&&(d=function(e){if(Array.isArray(e))return e;if("number"==typeof e)return[true,e];return null==e?s:[e]}(a(r,m)),false===d[0]))return d;if("children"in r&&r.children){const t=r;if(t.children&&"skip"!==d[0])for(c=(n?t.children.length:-1)+l,y=m.concat(t);c>-1&&c<t.children.length;){const a=t.children[c];if(p=e(a,c,y)(),false===p[0])return p;c="number"==typeof p[1]?p[1]:c+l}}return d}}(e,void 0,[])()}}}]);